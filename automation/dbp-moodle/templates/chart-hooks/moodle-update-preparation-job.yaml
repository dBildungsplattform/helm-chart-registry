{{ if and .Values.dbpMoodle.updateMigration.enabled (not .Values.dbpMoodle.restore.enabled) }}
apiVersion: batch/v1
kind: Job
metadata:
  name: "moodle-update-preparation"
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  template:
    spec:
      containers:
        - name: moodle-update-preparation
          image: "{{ .Values.dbpMoodle.moodleUpdatePreparationJob.repository }}/{{ .Values.dbpMoodle.moodleUpdatePreparationJob.image }}:{{ .Values.dbpMoodle.moodleUpdatePreparationJob.tag }}"
          securityContext:
            privileged: false
          command: ["/bin/bash", "/update-preparation.sh"]
          resources: {{ .Values.dbpMoodle.moodleUpdatePreparationJob.resources | toYaml }}
          env:
          - name: BACKUP_ENABLED
            value: '{{ .Values.dbpMoodle.backup.enabled }}'
          volumeMounts:
            - name: script-volume
              mountPath: /update-preparation.sh
              subPath: moodle-update-preparation.sh
          livenessProbe:
            exec:
              command:
                - cat
                - /tmp/healthy
            initialDelaySeconds: 10
            periodSeconds: 10
      affinity: {{ .Values.dbpMoodle.moodleUpdatePreparationJob.affinity | toYaml }}
      tolerations: {{ .Values.dbpMoodle.moodleUpdatePreparationJob.tolerations | toYaml }}
      serviceAccountName: "moodle-update-preparation-hook-serviceaccount"
      restartPolicy: Never
      volumes:
        - name: script-volume
          configMap:
            name: "moodle-update-preparation-hook-script"
            defaultMode: 0755
  ttlSecondsAfterFinished: 300
{{ end }}